import{_ as s,Y as n,Z as a,$ as e}from"./framework-ae46ee38.js";const t={},o=e(`<h1 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h1><h2 id="逐字字符串" tabindex="-1"><a class="header-anchor" href="#逐字字符串" aria-hidden="true">#</a> 逐字字符串</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> filePath <span class="token operator">=</span> <span class="token string">@&quot;C:\\Users\\scoleridge\\Documents\\&quot;;

string quote = @&quot;</span>Her name was <span class="token string">&quot;&quot;</span>Sara<span class="token punctuation">.</span><span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">;</span>
<span class="token comment">//Output: Her name was &quot;Sara.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原始字符串文本" tabindex="-1"><a class="header-anchor" href="#原始字符串文本" aria-hidden="true">#</a> 原始字符串文本</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> singleLine <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>&quot;Friends say <span class="token string">&quot;hello&quot;</span> <span class="token keyword">as</span> <span class="token class-name">they</span> pass <span class="token keyword">by</span><span class="token punctuation">.</span><span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="字符串内插" tabindex="-1"><a class="header-anchor" href="#字符串内插" aria-hidden="true">#</a> 字符串内插</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> name <span class="token operator">=</span> <span class="token string">&quot;Mark&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> date <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">;</span>

<span class="token comment">// Composite formatting:</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, {0}! Today is {1}, it&#39;s {2:HH:mm} now.&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> date<span class="token punctuation">.</span>DayOfWeek<span class="token punctuation">,</span> date<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// String interpolation:</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Hello, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">! Today is </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">date<span class="token punctuation">.</span>DayOfWeek</span><span class="token punctuation">}</span></span><span class="token string">, it&#39;s </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">date</span><span class="token format-string"><span class="token punctuation">:</span>HH:mm</span><span class="token punctuation">}</span></span><span class="token string"> now.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Both calls produce the same output that is similar to:</span>
<span class="token comment">// Hello, Mark! Today is Wednesday, it&#39;s 19:40 now.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),p=[o];function c(i,l){return n(),a("div",null,p)}const u=s(t,[["render",c],["__file","string.html.vue"]]);export{u as default};
