import{_ as n,Y as s,Z as a,$ as e}from"./framework-ae46ee38.js";const t={},p=e(`<h1 id="常用代码片段" tabindex="-1"><a class="header-anchor" href="#常用代码片段" aria-hidden="true">#</a> 常用代码片段</h1><h2 id="_1-字符串反转" tabindex="-1"><a class="header-anchor" href="#_1-字符串反转" aria-hidden="true">#</a> 1.字符串反转</h2><p>在此示例中，我们使用展开运算符，Array的<code>reverse</code>方法和 String 的<code>join</code>方法来反转给定的字符串。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">reverseString</span> <span class="token operator">=</span> <span class="token parameter">string</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>string<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 事例</span>
<span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token string">&#39;Medium&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;muideM&quot;</span>
<span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token string">&#39;Better Programming&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;gnimmargorP retteB&quot;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-计算指定数字的阶乘" tabindex="-1"><a class="header-anchor" href="#_2-计算指定数字的阶乘" aria-hidden="true">#</a> 2.计算指定数字的阶乘</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>const factorialOfNumber <span class="token operator">=</span> number <span class="token operator">=</span><span class="token operator">&gt;</span> 
  number <span class="token operator">&lt;</span> <span class="token number">0</span>
    ? <span class="token punctuation">((</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
      throw new TypeError<span class="token punctuation">(</span><span class="token string">&#39;请输入正整数&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token builtin class-name">:</span> number <span class="token operator">&lt;=</span> <span class="token number">1</span>
      ? <span class="token number">1</span>
      <span class="token builtin class-name">:</span> number * factorialOfNumber<span class="token punctuation">(</span>number - <span class="token number">1</span><span class="token punctuation">)</span>
      
      
// 事例
factorialOfNumber<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> // <span class="token number">24</span>
factorialOfNumber<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> // <span class="token number">40320</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-将数字转换为数字数组" tabindex="-1"><a class="header-anchor" href="#_3-将数字转换为数字数组" aria-hidden="true">#</a> 3.将数字转换为数字数组</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">converToArray</span> <span class="token operator">=</span> <span class="token parameter">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>number<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 事例</span>
<span class="token function">converToArray</span><span class="token punctuation">(</span><span class="token number">5678</span><span class="token punctuation">)</span> <span class="token comment">// [5, 6, 7, 8]</span>
<span class="token function">converToArray</span><span class="token punctuation">(</span><span class="token number">12345678</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2, 3, 4, 5, 6, 7, 8]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-检查数字是否为2的幂" tabindex="-1"><a class="header-anchor" href="#_4-检查数字是否为2的幂" aria-hidden="true">#</a> 4.检查数字是否为2的幂</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>const isNumberPowerOfTwo = number =&gt; !!number &amp;&amp; (number &amp; (number - 1)) == 0

// 事例
isNumberPowerOfTwo(100) // false
isNumberPowerOfTwo(128) // true

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-从对象创建键-值对数组" tabindex="-1"><a class="header-anchor" href="#_5-从对象创建键-值对数组" aria-hidden="true">#</a> 5.从对象创建<code>键-值</code>对数组</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>const keyValuePairsToArray = object =&gt; Object.keys(object)
  .map(el =&gt; [el, object[el]])

// 事例
keyValuePairsToArray({Better: 4, Programming: 2})
// [[&#39;Better&#39;, 4], [&#39;Programming&#39;, 2]]

keyValuePairsToArray({x:1, y:2, z:3})
// [[&#39;x&#39;, 1], [&#39;y&#39;, 2], [&#39;z&#39;, 3]]

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-返回数字数组中的最大值" tabindex="-1"><a class="header-anchor" href="#_6-返回数字数组中的最大值" aria-hidden="true">#</a> 6.返回数字数组中的最大值</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">maxElementsFromArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> number <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> y <span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> number<span class="token punctuation">)</span>

<span class="token comment">// 事例</span>
<span class="token function">maxElementsFromArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [5]</span>

<span class="token function">maxElementsFromArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// [10, 10]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-检查数组中的所有元素是否相等" tabindex="-1"><a class="header-anchor" href="#_7-检查数组中的所有元素是否相等" aria-hidden="true">#</a> 7. 检查数组中的所有元素是否相等</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">elementsAreEqual</span> <span class="token operator">=</span> <span class="token parameter">array</span> <span class="token operator">=&gt;</span> array<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> el <span class="token operator">===</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// 事例</span>
<span class="token function">elementsAreEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
<span class="token function">elementsAreEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// true</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-返回数的平均值" tabindex="-1"><a class="header-anchor" href="#_8-返回数的平均值" aria-hidden="true">#</a> 8. 返回数的平均值</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">averageOfTwoNumbers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>numbers</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> numbers<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">accumulator<span class="token punctuation">,</span> currentValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> accumulator <span class="token operator">+</span> currentValue<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">/</span> numbers<span class="token punctuation">.</span>length

<span class="token comment">// 事例</span>
<span class="token function">averageOfTwoNumbers</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 7</span>
<span class="token function">averageOfTwoNumbers</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 7.5</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-返回两个或多个数字的和" tabindex="-1"><a class="header-anchor" href="#_9-返回两个或多个数字的和" aria-hidden="true">#</a> 9.返回两个或多个数字的和</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sumOfNumbers</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>array</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>array<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">accumulator<span class="token punctuation">,</span> currentValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> accumulator <span class="token operator">+</span> currentValue<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">// 事例</span>
<span class="token function">sumOfNumbers</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// 45</span>
<span class="token function">sumOfNumbers</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 50</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-返回数字数组的幂集" tabindex="-1"><a class="header-anchor" href="#_10-返回数字数组的幂集" aria-hidden="true">#</a> 10.返回数字数组的幂集</h2><p>所谓幂集（Power Set）， 就是原集合中所有的子集（包括全集和空集）构成的集族。可数集是最小的无限集； 它的幂集和实数集一一对应（也称同势），是不可数集。 不是所有不可数集都和实数集等势，集合的势可以无限的大。如实数集的幂集也是不可数集，但它的势比实数集大。 设X是一个有限集，|X| = k，则X的幂集的势为2的k次方。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">powersetOfArray</span> <span class="token operator">=</span> <span class="token parameter">array</span> <span class="token operator">=&gt;</span> array<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">accumulator<span class="token punctuation">,</span> currentValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> accumulator<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>accumulator<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>currentValue<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// 事例</span>
<span class="token function">powersetOfArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [[], [4], [2], [2, 4]]</span>
<span class="token function">powersetOfArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// [[], [1], [2], [2,1], [3], [3,1], [3,2], [3,2,1]]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,24),c=[p];function o(u,l){return s(),a("div",null,c)}const r=n(t,[["render",o],["__file","snippets2.html.vue"]]);export{r as default};
