import{_ as i,Y as l,Z as t,a1 as s,a2 as a,a0 as o,$ as n,G as r}from"./framework-ae46ee38.js";const c="/cs-tips/assets/use-goland-fefdc902.png",d={},p=n(`<h1 id="golang配置" tabindex="-1"><a class="header-anchor" href="#golang配置" aria-hidden="true">#</a> golang配置</h1><p>不配置gopath的话,gopath默认为 ~/go 这个文件夹</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>on
go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct

<span class="token comment"># 建议不要把gopath设置为go安装文件夹内</span>
go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPATH</span><span class="token operator">=</span>d:<span class="token punctuation">\\</span>golangmod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>windows最后golang的全局配置会被保存在 <code>~\\AppData\\Roaming\\go</code>这个位置 GO环境变量配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$GOROOT</span><span class="token operator">=</span>/usr/local/go                        GO安装目录
<span class="token variable">$GOPATH</span><span class="token operator">=</span>/usr/local/var/www/go          GO工作目录
<span class="token variable">$GOBIN</span><span class="token operator">=</span><span class="token variable">$GOPATH</span>/bin                          GO可执行文件目录
<span class="token environment constant">$PATH</span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$GOBIN</span><span class="token builtin class-name">:</span><span class="token variable">$GOROOT</span>/bin  将GO可执行文件加入<span class="token environment constant">PATH</span>中，使GO指令与我们编写的GO应用可以全局调用

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><h2 id="安装air" tabindex="-1"><a class="header-anchor" href="#安装air" aria-hidden="true">#</a> 安装air</h2>`,7),g={href:"https://github.com/cosmtrek/air/releases",target:"_blank",rel:"noopener noreferrer"},u=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">install</span> github.com/cosmtrek/air@latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="安装-gf-cli" tabindex="-1"><a class="header-anchor" href="#安装-gf-cli" aria-hidden="true">#</a> 安装 gf-cli</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://goframe.org/cli/linux_amd64/gf <span class="token operator">&amp;&amp;</span> <span class="token function">chmod</span> +x gf <span class="token operator">&amp;&amp;</span> ./gf <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="快速记忆golang日期格式化" tabindex="-1"><a class="header-anchor" href="#快速记忆golang日期格式化" aria-hidden="true">#</a> 快速记忆golang日期格式化</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2006</span>-01-02 <span class="token number">15</span>:04:05
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>仔细观察这个日期，06年，1月2日下午3点4分5秒，查阅相关资料还有 -7时区，Monday，数字1~7都有了，而且都不重复。</p><h2 id="添加swaggerui" tabindex="-1"><a class="header-anchor" href="#添加swaggerui" aria-hidden="true">#</a> 添加swaggerui</h2><blockquote><p>在go-swagger的github下载</p></blockquote>`,8),h={href:"https://github.com/go-swagger/go-swagger/releases",target:"_blank",rel:"noopener noreferrer"},m=n(`<blockquote><p>自行编译</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go get https://github.com/go-swagger/go-swagger
<span class="token comment"># 然后进入您的gopath目录找到go-swagger 目录进入</span>
<span class="token comment"># 执行</span>
go <span class="token function">install</span> ./cmd/swagger
<span class="token comment"># 然后就会在go的bin目录或者其gopath的bin目录生成一个swag的可执行文件</span>
<span class="token comment"># 在项目目录执行</span>
swag init
<span class="token comment"># 就可以生成swaggerui的doc了</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用goland" tabindex="-1"><a class="header-anchor" href="#使用goland" aria-hidden="true">#</a> 使用goland</h2><p>配置编译go build <img src="`+c+'" alt="go"></p>',4);function v(b,k){const e=r("ExternalLinkIcon");return l(),t("div",null,[p,s("p",null,[a("打开网站"),s("a",g,[a("https://github.com/cosmtrek/air/releases"),o(e)]),a(" 下载i适合自己运行文件，然后放到 gopath下的bin文件夹(windows和linux默认在用户文件夹下的go文件夹)")]),u,s("p",null,[a("地址："),s("a",h,[a("https://github.com/go-swagger/go-swagger/releases"),o(e)])]),m])}const _=i(d,[["render",v],["__file","go-conf.html.vue"]]);export{_ as default};
